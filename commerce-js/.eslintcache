[{"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/index.js":"1","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/App.js":"2","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/reportWebVitals.js":"3","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Products/Products.js":"4","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Products/Product/Product.js":"5","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Products/Product/styles.js":"6","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/index.js":"7","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Navbar/Navbar.js":"8","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Navbar/styles.js":"9","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Products/styles.js":"10","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/lib/commerce.js":"11","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Cart/Cart.js":"12","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Cart/styles.js":"13","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Cart/CartItem/CartItem.js":"14","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Cart/CartItem/styles.js":"15","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/CheckoutForm/Checkout/Checkout.js":"16","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/CheckoutForm/Checkout/styles.js":"17","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/CheckoutForm/AddressFrom.js":"18","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/CheckoutForm/PaymentFrom.js":"19","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/CheckoutForm/FormInput.js":"20","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/CheckoutForm/Review.js":"21"},{"size":500,"mtime":1606931897035,"results":"22","hashOfConfig":"23"},{"size":2595,"mtime":1607344431811,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1606931897035,"results":"25","hashOfConfig":"23"},{"size":633,"mtime":1607010986465,"results":"26","hashOfConfig":"23"},{"size":1256,"mtime":1607011145898,"results":"27","hashOfConfig":"23"},{"size":394,"mtime":1607009332271,"results":"28","hashOfConfig":"23"},{"size":231,"mtime":1607265390561,"results":"29","hashOfConfig":"23"},{"size":1432,"mtime":1607261971158,"results":"30","hashOfConfig":"23"},{"size":1561,"mtime":1606998248804,"results":"31","hashOfConfig":"23"},{"size":270,"mtime":1606999567227,"results":"32","hashOfConfig":"23"},{"size":132,"mtime":1607005487392,"results":"33","hashOfConfig":"23"},{"size":2117,"mtime":1607264366358,"results":"34","hashOfConfig":"23"},{"size":773,"mtime":1607261040674,"results":"35","hashOfConfig":"23"},{"size":1447,"mtime":1607264086152,"results":"36","hashOfConfig":"23"},{"size":437,"mtime":1607260870428,"results":"37","hashOfConfig":"23"},{"size":2409,"mtime":1607342550727,"results":"38","hashOfConfig":"23"},{"size":1158,"mtime":1607265286295,"results":"39","hashOfConfig":"23"},{"size":5411,"mtime":1607341300145,"results":"40","hashOfConfig":"23"},{"size":2638,"mtime":1607344534040,"results":"41","hashOfConfig":"23"},{"size":465,"mtime":1607276824293,"results":"42","hashOfConfig":"23"},{"size":1026,"mtime":1607339041008,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"b1qcgv",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/index.js",[],["88","89"],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/App.js",["90"],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/reportWebVitals.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Products/Products.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Products/Product/Product.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Products/Product/styles.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/index.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Navbar/Navbar.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Navbar/styles.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Products/styles.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/lib/commerce.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Cart/Cart.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Cart/styles.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Cart/CartItem/CartItem.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/Cart/CartItem/styles.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/CheckoutForm/Checkout/Checkout.js",["91","92","93","94"],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/CheckoutForm/Checkout/styles.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/CheckoutForm/AddressFrom.js",["95","96"],"import {\n  Button,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Typography,\n  Select,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport FormInput from \"./FormInput\";\nimport { commerce } from \"../../lib/commerce\";\n\nconst AddressFrom = ({ checkoutToken, next }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState(\"\");\n  const [shippingSubdivisions, setshippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setshippingSubdivision] = useState(\"\");\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState(\"\");\n  //React hook Form ðŸ™‚\n  const methods = useForm();\n  //Data Fetching ðŸ˜ \n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(\n      checkoutTokenId\n    );\n\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubDivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\n      countryCode\n    );\n    setshippingSubdivisions(subdivisions);\n    setshippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n  const fetchShippingOptions = async (\n    checkoutTokenId,\n    country,\n    region = null\n  ) => {\n    const options = await commerce.checkout.getShippingOptions(\n      checkoutTokenId,\n      {\n        country,\n        region,\n      }\n    );\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubDivisions(shippingCountry);\n  }, [shippingCountry]);\n  useEffect(() => {\n    if (shippingSubdivision)\n      fetchShippingOptions(\n        checkoutToken.id,\n        shippingCountry,\n        shippingSubdivision\n      );\n  }, [shippingSubdivision]);\n  return (\n    <>\n      <Typography variant=\"h5\" gutterBottom>\n        Shipping Address\n      </Typography>\n      <FormProvider {...methods}>\n        <form\n          onSubmit={methods.handleSubmit((data) =>\n            next({\n              ...data,\n              shippingCountry,\n              shippingSubdivision,\n              shippingOption,\n            })\n          )}\n        >\n          <Grid container spacing={3}>\n            <FormInput name=\"firstName\" label=\"First name\" />\n            <FormInput name=\"lastName\" label=\"Last name\" />\n            <FormInput name=\"address1\" label=\"Address\" />\n            <FormInput name=\"email\" label=\"Email\" />\n            <FormInput name=\"city\" label=\"City\" />\n            <FormInput name=\"zip\" label=\"ZIP / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select\n                value={shippingCountry}\n                fullWidth\n                onChange={(e) => setShippingCountry(e.target.value)}\n              >\n                {Object.entries(shippingCountries)\n                  .map(([code, name]) => ({\n                    id: code,\n                    label: name,\n                  }))\n                  .map((country) => (\n                    <MenuItem key={country.id} value={country.id}>\n                      {country.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping SubDivision</InputLabel>\n              <Select\n                value={shippingSubdivision}\n                fullWidth\n                onChange={(e) => setshippingSubdivision(e.target.value)}\n              >\n                {Object.entries(shippingSubdivisions)\n                  .map(([name, code]) => ({\n                    id: code,\n                    label: name,\n                  }))\n                  .map((subdivision) => (\n                    <MenuItem key={subdivision.id} value={subdivision.id}>\n                      {subdivision.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select\n                value={shippingOption}\n                fullWidth\n                onChange={(e) => setShippingOption(e.target.value)}\n              >\n                {shippingOptions\n                  .map((sO) => ({\n                    id: sO.id,\n                    label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\n                  }))\n                  .map((option) => (\n                    <MenuItem key={option.id} value={option.id}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Button component={Link} to=\"/cart\" variant=\"outlined\">\n              Back to Cart\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Next\n            </Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n\nexport default AddressFrom;\n","/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/CheckoutForm/PaymentFrom.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/CheckoutForm/FormInput.js",[],"/home/paulokello/Documents/Projects/commercejs/commerce-js/src/components/CheckoutForm/Review.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":38,"column":9,"nodeType":"103","messageId":"104","endLine":38,"endColumn":20},{"ruleId":"101","severity":1,"message":"105","line":8,"column":3,"nodeType":"103","messageId":"104","endLine":8,"endColumn":19},{"ruleId":"101","severity":1,"message":"106","line":9,"column":3,"nodeType":"103","messageId":"104","endLine":9,"endColumn":10},{"ruleId":"101","severity":1,"message":"107","line":10,"column":3,"nodeType":"103","messageId":"104","endLine":10,"endColumn":9},{"ruleId":"108","severity":1,"message":"109","line":37,"column":6,"nodeType":"110","endLine":37,"endColumn":8,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":58,"column":6,"nodeType":"110","endLine":58,"endColumn":8,"suggestions":"113"},{"ruleId":"108","severity":1,"message":"114","line":70,"column":6,"nodeType":"110","endLine":70,"endColumn":27,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'refreshCart' is assigned a value but never used.","Identifier","unusedVar","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cart.id'. Either include it or remove the dependency array.","ArrayExpression",["118"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["119"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [cart.id]",{"range":"127","text":"128"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"129","text":"130"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"131","text":"132"},[1007,1009],"[cart.id]",[1772,1774],"[checkoutToken.id]",[2054,2075],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]